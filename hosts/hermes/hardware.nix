# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.kernelParams = [ "drm.vblankoffdelay=0" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/ee2f1eb2-d190-477d-8947-7b201ea1ba72";
      fsType = "f2fs";
      options = [ "nodiscard" "gc_merge" "atgc" "inline_data" "inline_dentry" "compress_cache" "checkpoint_merge" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/18a91392-a00a-4dbb-9989-2afe738c14da";
      fsType = "xfs";
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/0718265c-d1f9-4472-a537-0caa5d04aa91";
      fsType = "f2fs";
      options = [ "nodiscard" "gc_merge" "atgc" "inline_data" "inline_dentry" "compress_cache" "checkpoint_merge" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D7B1-68C7";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/447d6b19-b3d5-46c0-a0d3-9fc63b51e6de"; }
    ];

  hardware = {
    brillo.enable = true;
    ksm.enable = true;
    opengl.enable = true;
    video.hidpi.enable = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;
}
